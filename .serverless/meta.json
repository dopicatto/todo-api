{
  "/home/daniel/Documents/todo-api": {
    "versionSfCore": null,
    "versionFramework": "4.0.33",
    "isWithinCompose": false,
    "composeOrgName": null,
    "servicePath": "/home/daniel/Documents/todo-api",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "todo-api",
      "provider": {
        "name": "aws",
        "runtime": "nodejs20.x",
        "region": "us-east-1",
        "stage": "dev",
        "environment": {
          "TODOS_TABLE": "todo-api-dev"
        },
        "iamRoleStatements": [
          {
            "Effect": "Allow",
            "Action": [
              "dynamodb:PutItem",
              "dynamodb:UpdateItem",
              "dynamodb:GetItem",
              "dynamodb:DeleteItem",
              "dynamodb:Scan"
            ],
            "Resource": "arn:aws:dynamodb:us-east-1:*:table/todo-api-dev"
          }
        ],
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "ServerlessDeploymentBucket": {
              "Type": "AWS::S3::Bucket",
              "Properties": {
                "BucketEncryption": {
                  "ServerSideEncryptionConfiguration": [
                    {
                      "ServerSideEncryptionByDefault": {
                        "SSEAlgorithm": "AES256"
                      }
                    }
                  ]
                }
              }
            },
            "ServerlessDeploymentBucketPolicy": {
              "Type": "AWS::S3::BucketPolicy",
              "Properties": {
                "Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "PolicyDocument": {
                  "Statement": [
                    {
                      "Action": "s3:*",
                      "Effect": "Deny",
                      "Principal": "*",
                      "Resource": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              },
                              "/*"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              }
                            ]
                          ]
                        }
                      ],
                      "Condition": {
                        "Bool": {
                          "aws:SecureTransport": false
                        }
                      }
                    }
                  ]
                }
              }
            },
            "CreateTodoLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/todo-api-dev-createTodo"
              }
            },
            "GetTodosLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/todo-api-dev-getTodos"
              }
            },
            "UpdateTodoLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/todo-api-dev-updateTodo"
              }
            },
            "DeleteTodoLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/todo-api-dev-deleteTodo"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "todo-api",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/todo-api-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/todo-api-dev*:*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "dynamodb:PutItem",
                            "dynamodb:UpdateItem",
                            "dynamodb:GetItem",
                            "dynamodb:DeleteItem",
                            "dynamodb:Scan"
                          ],
                          "Resource": "arn:aws:dynamodb:us-east-1:*:table/todo-api-dev"
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "todo-api",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "CreateTodoLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/todo-api/dev/1717424472344-2024-06-03T14:21:12.344Z/todo-api.zip"
                },
                "Handler": "handler.createTodo",
                "Runtime": "nodejs20.x",
                "FunctionName": "todo-api-dev-createTodo",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "TODOS_TABLE": "todo-api-dev"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "CreateTodoLogGroup"
              ]
            },
            "GetTodosLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/todo-api/dev/1717424472344-2024-06-03T14:21:12.344Z/todo-api.zip"
                },
                "Handler": "handler.getTodos",
                "Runtime": "nodejs20.x",
                "FunctionName": "todo-api-dev-getTodos",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "TODOS_TABLE": "todo-api-dev"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "GetTodosLogGroup"
              ]
            },
            "UpdateTodoLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/todo-api/dev/1717424472344-2024-06-03T14:21:12.344Z/todo-api.zip"
                },
                "Handler": "handler.updateTodo",
                "Runtime": "nodejs20.x",
                "FunctionName": "todo-api-dev-updateTodo",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "TODOS_TABLE": "todo-api-dev"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "UpdateTodoLogGroup"
              ]
            },
            "DeleteTodoLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/todo-api/dev/1717424472344-2024-06-03T14:21:12.344Z/todo-api.zip"
                },
                "Handler": "handler.deleteTodo",
                "Runtime": "nodejs20.x",
                "FunctionName": "todo-api-dev-deleteTodo",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "TODOS_TABLE": "todo-api-dev"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "DeleteTodoLogGroup"
              ]
            },
            "CreateTodoLambdaVersion0tC1p0T8AZjSROmyAwYmz7WMpY4PXLSm6h3SbRaPI": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "CreateTodoLambdaFunction"
                },
                "CodeSha256": "kZkLNgGjBk+MPhCRiadjSaDCNkSN/ZYPW5crHHWobfI="
              }
            },
            "GetTodosLambdaVersionqRkJHqs8kq8oRyEahdWDSUzZgl3LPiVNKEJM5q2M": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "GetTodosLambdaFunction"
                },
                "CodeSha256": "kZkLNgGjBk+MPhCRiadjSaDCNkSN/ZYPW5crHHWobfI="
              }
            },
            "UpdateTodoLambdaVersiona5xOMPZuOyLyERvF1FBmVmrOTgOURZgEN3m8OURBHP4": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "UpdateTodoLambdaFunction"
                },
                "CodeSha256": "kZkLNgGjBk+MPhCRiadjSaDCNkSN/ZYPW5crHHWobfI="
              }
            },
            "DeleteTodoLambdaVersionQMtStBNrfZ5uc5yTGP82hL1k8EgGUzuGpuvECV6pPw": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "DeleteTodoLambdaFunction"
                },
                "CodeSha256": "kZkLNgGjBk+MPhCRiadjSaDCNkSN/ZYPW5crHHWobfI="
              }
            },
            "ApiGatewayRestApi": {
              "Type": "AWS::ApiGateway::RestApi",
              "Properties": {
                "Name": "dev-todo-api",
                "EndpointConfiguration": {
                  "Types": [
                    "EDGE"
                  ]
                },
                "Policy": ""
              }
            },
            "ApiGatewayResourceTodos": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "todos",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceTodosIdVar": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceTodos"
                },
                "PathPart": "{id}",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodTodosPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceTodos"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "CreateTodoLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "CreateTodoLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodTodosGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceTodos"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "GetTodosLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "GetTodosLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodTodosIdVarPut": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "PUT",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceTodosIdVar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "UpdateTodoLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "UpdateTodoLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodTodosIdVarDelete": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "DELETE",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceTodosIdVar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "DeleteTodoLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "DeleteTodoLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayDeployment1717424463605": {
              "Type": "AWS::ApiGateway::Deployment",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "StageName": "dev"
              },
              "DependsOn": [
                "ApiGatewayMethodTodosPost",
                "ApiGatewayMethodTodosGet",
                "ApiGatewayMethodTodosIdVarPut",
                "ApiGatewayMethodTodosIdVarDelete"
              ]
            },
            "CreateTodoLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "CreateTodoLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "GetTodosLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "GetTodosLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "UpdateTodoLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "UpdateTodoLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "DeleteTodoLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "DeleteTodoLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "TodosTable": {
              "Type": "AWS::DynamoDB::Table",
              "Properties": {
                "TableName": "todo-api-dev",
                "AttributeDefinitions": [
                  {
                    "AttributeName": "id",
                    "AttributeType": "S"
                  }
                ],
                "KeySchema": [
                  {
                    "AttributeName": "id",
                    "KeyType": "HASH"
                  }
                ],
                "ProvisionedThroughput": {
                  "ReadCapacityUnits": 1,
                  "WriteCapacityUnits": 1
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "Export": {
                "Name": "sls-todo-api-dev-ServerlessDeploymentBucketName"
              }
            },
            "CreateTodoLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "CreateTodoLambdaVersion0tC1p0T8AZjSROmyAwYmz7WMpY4PXLSm6h3SbRaPI"
              },
              "Export": {
                "Name": "sls-todo-api-dev-CreateTodoLambdaFunctionQualifiedArn"
              }
            },
            "GetTodosLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "GetTodosLambdaVersionqRkJHqs8kq8oRyEahdWDSUzZgl3LPiVNKEJM5q2M"
              },
              "Export": {
                "Name": "sls-todo-api-dev-GetTodosLambdaFunctionQualifiedArn"
              }
            },
            "UpdateTodoLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "UpdateTodoLambdaVersiona5xOMPZuOyLyERvF1FBmVmrOTgOURZgEN3m8OURBHP4"
              },
              "Export": {
                "Name": "sls-todo-api-dev-UpdateTodoLambdaFunctionQualifiedArn"
              }
            },
            "DeleteTodoLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "DeleteTodoLambdaVersionQMtStBNrfZ5uc5yTGP82hL1k8EgGUzuGpuvECV6pPw"
              },
              "Export": {
                "Name": "sls-todo-api-dev-DeleteTodoLambdaFunctionQualifiedArn"
              }
            },
            "ServiceEndpoint": {
              "Description": "URL of the service endpoint",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    },
                    "/dev"
                  ]
                ]
              },
              "Export": {
                "Name": "sls-todo-api-dev-ServiceEndpoint"
              }
            }
          }
        },
        "coreCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "ServerlessDeploymentBucket": {
              "Type": "AWS::S3::Bucket",
              "Properties": {
                "BucketEncryption": {
                  "ServerSideEncryptionConfiguration": [
                    {
                      "ServerSideEncryptionByDefault": {
                        "SSEAlgorithm": "AES256"
                      }
                    }
                  ]
                }
              }
            },
            "ServerlessDeploymentBucketPolicy": {
              "Type": "AWS::S3::BucketPolicy",
              "Properties": {
                "Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "PolicyDocument": {
                  "Statement": [
                    {
                      "Action": "s3:*",
                      "Effect": "Deny",
                      "Principal": "*",
                      "Resource": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              },
                              "/*"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              }
                            ]
                          ]
                        }
                      ],
                      "Condition": {
                        "Bool": {
                          "aws:SecureTransport": false
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": {
                "Ref": "ServerlessDeploymentBucket"
              }
            }
          }
        },
        "vpc": {}
      },
      "plugins": [
        "serverless-offline"
      ],
      "functions": {
        "createTodo": {
          "handler": "handler.createTodo",
          "events": [
            {
              "http": {
                "path": "todos",
                "method": "post",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "todo-api-dev-createTodo",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "CreateTodoLambdaVersion0tC1p0T8AZjSROmyAwYmz7WMpY4PXLSm6h3SbRaPI"
        },
        "getTodos": {
          "handler": "handler.getTodos",
          "events": [
            {
              "http": {
                "path": "todos",
                "method": "get",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "todo-api-dev-getTodos",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "GetTodosLambdaVersionqRkJHqs8kq8oRyEahdWDSUzZgl3LPiVNKEJM5q2M"
        },
        "updateTodo": {
          "handler": "handler.updateTodo",
          "events": [
            {
              "http": {
                "path": "todos/{id}",
                "method": "put",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "todo-api-dev-updateTodo",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "UpdateTodoLambdaVersiona5xOMPZuOyLyERvF1FBmVmrOTgOURZgEN3m8OURBHP4"
        },
        "deleteTodo": {
          "handler": "handler.deleteTodo",
          "events": [
            {
              "http": {
                "path": "todos/{id}",
                "method": "delete",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "todo-api-dev-deleteTodo",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "DeleteTodoLambdaVersionQMtStBNrfZ5uc5yTGP82hL1k8EgGUzuGpuvECV6pPw"
        }
      },
      "resources": {
        "Resources": {
          "TodosTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "todo-api-dev",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 1,
                "WriteCapacityUnits": 1
              }
            }
          }
        },
        "Outputs": {}
      }
    },
    "serviceRawFile": "service: todo-api\n\nprovider:\n  name: aws\n  runtime: nodejs20.x \n  region: us-east-1\n  stage: dev\n  environment:\n    TODOS_TABLE: ${self:service}-${self:provider.stage}\n  iamRoleStatements:\n    - Effect: \"Allow\"\n      Action:\n        - \"dynamodb:PutItem\"\n        - \"dynamodb:UpdateItem\"\n        - \"dynamodb:GetItem\"\n        - \"dynamodb:DeleteItem\"\n        - \"dynamodb:Scan\"\n      Resource: \"arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.TODOS_TABLE}\"\n\nplugins:\n  - serverless-offline\n\nfunctions:\n  createTodo:\n    handler: handler.createTodo\n    events:\n      - http:\n          path: todos\n          method: post\n  getTodos:\n    handler: handler.getTodos\n    events:\n      - http:\n          path: todos\n          method: get\n  updateTodo:\n    handler: handler.updateTodo\n    events:\n      - http:\n          path: todos/{id}\n          method: put\n  deleteTodo:\n    handler: handler.deleteTodo\n    events:\n      - http:\n          path: todos/{id}\n          method: delete\n\nresources:\n  Resources:\n    TodosTable:\n      Type: AWS::DynamoDB::Table\n      Properties:\n        TableName: ${self:provider.environment.TODOS_TABLE}\n        AttributeDefinitions:\n          - AttributeName: id\n            AttributeType: S\n        KeySchema:\n          - AttributeName: id\n            KeyType: HASH\n        ProvisionedThroughput:\n          ReadCapacityUnits: 1\n          WriteCapacityUnits: 1\n",
    "command": [
      "deploy"
    ],
    "options": {},
    "error": null,
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "22886733-f4b9-48e7-8a19-794e40348026",
    "orgName": "dopicatto",
    "userId": "SjYJ68R1Vr7GHYxr9Z",
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "userName": "dopicatto",
    "subscription": null,
    "userEmail": "dopicatto@gmail.com",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "047498047764",
    "versionSf": "4.0.33",
    "serviceProviderAwsCfStackName": "todo-api-dev",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-1:047498047764:stack/todo-api-dev/05bb8870-2030-11ef-be38-0ed3858083d3",
    "serviceProviderAwsCfStackCreated": "2024-06-01T16:00:09.932Z",
    "serviceProviderAwsCfStackUpdated": "2024-06-03T14:21:46.812Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "UpdateTodoLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:047498047764:function:todo-api-dev-updateTodo:11",
        "Description": "Current Lambda function version",
        "ExportName": "sls-todo-api-dev-UpdateTodoLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "GetTodosLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:047498047764:function:todo-api-dev-getTodos:12",
        "Description": "Current Lambda function version",
        "ExportName": "sls-todo-api-dev-GetTodosLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "DeleteTodoLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:047498047764:function:todo-api-dev-deleteTodo:12",
        "Description": "Current Lambda function version",
        "ExportName": "sls-todo-api-dev-DeleteTodoLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "CreateTodoLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:047498047764:function:todo-api-dev-createTodo:12",
        "Description": "Current Lambda function version",
        "ExportName": "sls-todo-api-dev-CreateTodoLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://b1hzanwjd0.execute-api.us-east-1.amazonaws.com/dev",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-todo-api-dev-ServiceEndpoint"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "todo-api-dev-serverlessdeploymentbucket-h0xzcho9rfl1",
        "ExportName": "sls-todo-api-dev-ServerlessDeploymentBucketName"
      }
    ]
  }
}